name: Build, Release, and Store Custom Ubuntu ISO

on:
  workflow_dispatch:
    inputs:
      package_names:
        description: 'Comma-separated list of additional packages to install'
        required: true

jobs:
  build-iso:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Add Cubic PPA
      run: |
        sudo add-apt-repository ppa:cubic-wizard/release -y
        sudo apt-get update

    - name: Install Required Tools
      run: |
        sudo apt-get install genisoimage git-lfs -y

    - name: Generate Random Code Name
      id: random-code-name
      run: echo "CODE_NAME=$(cat /dev/urandom | tr -dc 'a-zA-Z' | fold -w 8 | head -n 1)" >> $GITHUB_ENV

    - name: Determine Previous ISO
      id: determine-previous
      run: |
        if [ -f previous_iso.txt ]; then
          previous_iso_name=$(cat previous_iso.txt)
        else
          previous_iso_name="latest"
        fi
        echo "PREVIOUS_ISO_NAME=$previous_iso_name" >> $GITHUB_ENV

    - name: Download Previous ISO
      id: download-previous
      run: |
        if [ "$PREVIOUS_ISO_NAME" == "latest" ]; then
          # If no previous ISO is found, download the latest added version
          wget -N --timestamping https://archive.org/download/spoink-os/SpoinkOS-Latest-desktop-amd64.iso -O latest.iso
        else
          wget https://archive.org/download/spoink-os/${PREVIOUS_ISO_NAME}.iso -O previous.iso
          rm previous.iso
        fi

    - name: Download Custom ISO
      run: |
        iso_name=${{ env.CODE_NAME }}-$(date +'%Y%m%d%H%M%S')
        wget https://archive.org/download/spoink-os/SpoinkOS-Latest-desktop-amd64.iso -O $iso_name.iso
        echo "$iso_name" > previous_iso.txt

    - name: Install Additional Packages
      id: install-packages
      run: |
        echo "${{ inputs.package_names }}" | tr ',' '\n' | xargs sudo chroot $iso_name.iso apt-get install -y

    - name: Create ISO Image
      run: |
        sudo genisoimage -o custom.iso -r -J -no-emul-boot -boot-load-size 4 -boot-info-table -b isolinux/isolinux.bin -c isolinux/boot.cat -input-charset UTF-8 -V "Custom Ubuntu ISO" .

    - name: Move ISO to GitHub LFS
      run: |
        git lfs track "*.iso"
        git add custom.iso
        git commit -m "Build custom ISO"
        git push

    - name: Create Release
      id: create-release
      run: |
        release_name="SpoinkOS Release $(date +'%Y%m%d%H%M%S')"
        release_tag="v$(date +'%Y%m%d%H%M%S')"
        echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV
        echo "RELEASE_TAG=$release_tag" >> $GITHUB_ENV
        git tag -a $release_tag -m "$release_name"
        git push origin $release_tag

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v2
      with:
        name: release-artifact
        path: .

    - name: Store ISO as Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: custom-iso
        path: custom.iso
