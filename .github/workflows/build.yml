name: Build and Release

on:
  workflow_dispatch:
    inputs:
      package_names:
        description: 'Comma-separated list of additional packages to install'
        required: true

jobs:
  build-iso:
    runs-on: ubuntu-latest
    steps:

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Required Tools
      run: |
        echo "Installing essential tools..."
        sudo apt-get update -qq && sudo apt-get install -yqq genisoimage git-lfs wget

    - name: Download Previous ISO
      id: download-previous
      run: |
        echo "Downloading previous ISO..."
        wget -N --timestamping https://archive.org/download/spoink-os/SpoinkOS-Latest-desktop-amd64.iso -O latest.iso

    - name: Unpack ISO
      run: |
        echo "Unpacking ISO..."
        sudo mkdir -p iso_mount
        sudo mount -o loop latest.iso iso_mount

    - name: Install Additional Packages
      id: install-packages
      run: |
        echo "Installing additional packages..."
        retry_install() {
          cd "$(shuf -n 1 -e iso_mount/*/)"
          sudo mount --bind /proc ./proc
          sudo mount --bind /sys ./sys
          sudo mount --bind /dev ./dev

          if sudo chroot . /bin/bash -c 'apt-get update -qq && apt-get install -yqq --no-install-recommends $0'; then
            sudo umount ./proc ./sys ./dev
            return 0
          else
            echo "Package installation failed. Retrying..."
            sudo umount ./proc ./sys ./dev
            return 1
          fi
        }

        until retry_install "${{ inputs.package_names }}"; do :; done

    - name: Run Code Scanning (shellcheck and codespell)
      run: |
        echo "Running code scanning..."
        sudo apt-get install -yqq shellcheck
        shellcheck --format=gcc ./**/*.sh

        sudo apt-get install -yqq codespell
        codespell --check-filenames --skip="*.iso" --fix

    - name: Automated Formatting with Prettier
      run: |
        echo "Automatically formatting code with Prettier..."
        sudo apt-get install -yqq npm
        npm install -g prettier
        prettier --write .

    - name: Dependency Scanning with Snyk
      run: |
        echo "Performing dependency scanning with Snyk..."
        sudo apt-get install -yqq nodejs
        npm install -g snyk
        snyk test

    - name: Auto-fixing with codespell
      run: |
        echo "Auto-fixing with codespell..."
        pip install codespell
        codespell --check-filenames --skip="*.iso" --fix

    - name: Create ISO Image
      run: |
        echo "Creating ISO image..."
        sudo genisoimage -o custom.iso -r -J -no-emul-boot -boot-load-size 4 -boot-info-table -b isolinux/isolinux.bin -c isolinux/boot.cat -input-charset UTF-8 -V "Custom Ubuntu ISO" -quiet .

    - name: Move ISO to GitHub LFS
      run: |
        echo "Moving ISO to GitHub LFS..."
        git lfs track "*.iso"
        git add custom.iso
        git commit -m "Build custom ISO"
        git push


    - name: Create Release
      id: create-release
      run: |
        echo "Creating release..."
        release_name="Build"
        release_tag="v$(date +'%Y%m%d%H%M%S')"
        echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV
        echo "RELEASE_TAG=$release_tag" >> $GITHUB_ENV
        git tag -a $release_tag -m "$release_name"
        git push origin $release_tag

  cleanup:
    runs-on: ubuntu-latest
    needs: build-iso

    steps:
    - name: Clean Up
      run: |
        echo "Cleaning up..."
        sudo umount iso_mount
        sudo rmdir iso_mount
        rm -f custom.iso latest.iso

    - name: Clean Up LFS
      run: |
        echo "Cleaning up LFS..."
        git lfs untrack "*.iso"
        git rm --cached custom.iso latest.iso
        git commit -m "Clean up"
        git push
      run: echo "LFS clean up completed."
